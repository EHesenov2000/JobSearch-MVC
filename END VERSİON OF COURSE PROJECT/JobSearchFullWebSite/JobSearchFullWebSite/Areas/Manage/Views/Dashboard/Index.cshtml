@using JobSearchFullWebSite.Areas.Manage.ViewModels
@using JobSearchFullWebSite.Enums
@model DashboardViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Manage/Views/Shared/_Layout.cshtml";
}

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Statistika</h1>
        @*<a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                <i class="fas fa-download fa-sm text-white-50"></i> Generate Report
            </a>*@
    </div>

    <!-- Content Row -->
    <div class="row">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Paylaşılan işlər
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@(Model.Jobs.Where(x => x.ApplyStatus==ApplyStatus.Accepted).Count()!=0? Model.Jobs.Where(x => x.ApplyStatus == ApplyStatus.Accepted).Count():0)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Şirkətlər
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Employers.Count()</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                İşcilər
                            </div>
                            @*<div class="row no-gutters align-items-center">*@
                                <div class="col-auto">
                                    @*<div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@Model.Candidates.Count()</div>*@
                                </div>
                                <div class="col">
                                    @*<div class="progress progress-sm mr-2">
                                            <div class="progress-bar bg-info" role="progressbar"
                                                 style="width: 50%" aria-valuenow="50" aria-valuemin="0"
                                                 aria-valuemax="100"></div>
                                        </div>*@

                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Requests Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Gözləyən işlər
                            </div>
                            @*<div class="h5 mb-0 font-weight-bold text-gray-800">@(Model.Jobs.Where(x => x.ApplyStatus==ApplyStatus.Pending).Count()!=0? Model.Jobs.Where(x => x.ApplyStatus == ApplyStatus.Pending).Count():0)</div>*@
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-comments fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Content Row -->

    <div class="row">

        <!-- Area Chart -->
        <div class="col-12">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">İşlərin statistikası</h6>
                    @*<div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                     aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Dropdown Header:</div>
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#">Something else here</a>
                </div>
            </div>*@
                </div>
                <!-- Card Body -->
                <div class="card-body" style="height:470px;">
                    <div id="chartContainer"></div>
                    <div id="chartC
                            ght: 300px; width: 100%"
                         class="mt-5"></div>
                </div>
            </div>
        </div>
</div>
<!-- /.container-fluid -->
@section Scripts{
    <script src="~/manage/js/demo/chart-area-demo.js"></script>
    <script src="~/manage/js/demo/chart-pie-demo.js"></script>
    <script>
window.onload = function () {

            //console.log("https://localhost:44378/manage/dashboard/getjobs");
            fetch('https://localhost:44378/manage/dashboard/getjobs')
                .then(response => response.json())
                .then(data => {
                    var d = new Date();
                    var now = d.getUTCFullYear();
                    var nowYear = [];
                    var nowYear1 = [];
                    var nowYear2 = [];
                    var nowYear3 = [];
                    var nowYear4 = [];
                    var nowYear5 = [];
                    var nowYear6 = [];
                    var nowYear7 = [];
                    var nowYear8 = [];
                    var nowYear9 = [];
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].createdAt.slice(0, 4) == now) {
                            nowYear.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-1) {
                            nowYear1.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-2) {
                            nowYear2.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-3) {
                            nowYear3.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-4) {
                            nowYear4.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-5) {
                            nowYear5.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-6) {
                            nowYear6.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-7) {
                            nowYear7.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-8) {
                            nowYear8.push(data[i]);
                        }
                        if (data[i].createdAt.slice(0, 4) == now-9) {
                            nowYear9.push(data[i]);
                        }
                    }
                    var ortalama = Math.round((nowYear.length + nowYear1.length + nowYear2.length + nowYear3.length + nowYear4.length + nowYear5.length + nowYear6.length + nowYear7.length + nowYear8.length + nowYear9.length) / 10);
                    var chart = new CanvasJS.Chart("chartContainer", {
                        animationEnabled: true,
                        //title: {
                        //    text: "İşlərin statistikası",
                        //},
                        axisY: {
                            title: "İşlər",
                            valueFormatString: "##",
                            suffix: "",
                            stripLines: [
                                {
                                    value: ortalama,
                                    label: "Ortalama",
                                },
                            ],
                        },
                        data: [
                            {
                                yValueFormatString: "#### İş",
                                xValueFormatString: "YYYY",
                                type: "splineArea",
                                dataPoints: [
                                    { x: new Date(now - 9, 0), y: nowYear9.length },
                                    { x: new Date(now - 8, 0), y: nowYear8.length },
                                    { x: new Date(now - 7, 0), y: nowYear7.length },
                                    { x: new Date(now - 6, 0), y: nowYear6.length },
                                    { x: new Date(now - 5, 0), y: nowYear5.length },
                                    { x: new Date(now - 4, 0), y: nowYear4.length },
                                    { x: new Date(now - 3, 0), y: nowYear3.length },
                                    { x: new Date(now - 2, 0), y: nowYear2.length },
                                    { x: new Date(now - 1, 0), y: nowYear1.length },
                                    { x: new Date(now, 0), y: nowYear.length },
                                ],
                            },
                        ],
                    });
                    chart.render();
                }

                );


        };

    </script>
}
